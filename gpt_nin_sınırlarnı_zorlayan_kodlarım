import pandas as pd
import numpy as np

# 1. Daha küçük veri seti üret
np.random.seed(42)
rows = 2000
cols = 10
data = np.random.rand(rows, cols)
columns = ['A_' + str(i) for i in range(cols)]
df = pd.DataFrame(data, columns=columns)
for col in df.columns:
    df[col] = np.where(df[col] > 0.5, df[col] * np.pi / 3.14 * 3.14159, df[col])
    df[col] = np.where(df[col] < 1, np.sin(df[col]) + np.cos(df[col]) - np.tan(df[col]), df[col])
    df[col] = np.where(df[col] < 0.7, df[col]**2, np.sqrt(df[col]))
    df[col] = df[col] + df[col].rolling(window=5, min_periods=1).mean()
    df[col] = df[col].fillna(df[col].mean())

row_sum = df.sum(axis=1)
row_mean = df.mean(axis=1)
row_std = df.std(axis=1).replace(0, 1e-6)
for i in range(3): 
    df[f'NEW_COL_{i}'] = row_sum * row_mean / row_std
df['cumsum_total'] = row_sum.cumsum()
df['cumprod_total'] = row_sum.cumprod()
df['expanding_mean'] = row_sum.expanding().mean()
df['rolling_sum'] = row_sum.rolling(window=50, min_periods=1).sum()
df['group'] = np.random.choice(['A', 'B', 'C', 'D'], size=len(df))
grouped = df.groupby('group').agg(['mean', 'std', 'min', 'max', 'median'])
pivoted = df.pivot_table(index='group', values='NEW_COL_0', aggfunc='mean')
stacked = df.set_index('group').stack().reset_index()

df2 = df[['NEW_COL_0', 'group']].copy()
df2['dummy'] = np.random.randint(0, 100, size=len(df2))
merged = pd.merge(df, df2, on='group', how='inner')

for i in range(3):
    merged[f'applied_{i}'] = np.where(merged['dummy'] % 2 == 0, merged['dummy'] * (i + 1), merged['dummy'] + i)


def complex_function(x):
    try:
        return np.log1p(np.sqrt(np.abs(np.sin(x) + np.cos(x**2) - np.tan(x / 3.14)))) * np.e
    except:
        return np.nan

merged['complex'] = merged['NEW_COL_1'].apply(complex_function)

output_path = "/mnt/data/final_useless_output.csv"
merged.to_csv(output_path, index=False)

output_path
np.random.seed(42)
rows = 2000
cols = 10
data = np.random.rand(rows, cols)
columns = ['A_' + str(i) for i in range(cols)]
df = pd.DataFrame(data, columns=columns)


for col in df.columns:
    df[col] = np.where(df[col] > 0.5, df[col] * np.pi / 3.14 * 3.14159, df[col])
    df[col] = np.where(df[col] < 1, np.sin(df[col]) + np.cos(df[col]) - np.tan(df[col]), df[col])
    df[col] = np.where(df[col] < 0.7, df[col]**2, np.sqrt(df[col]))
    df[col] = df[col] + df[col].rolling(window=5, min_periods=1).mean()
    df[col] = df[col].fillna(df[col].mean())


row_sum = df.sum(axis=1)
row_mean = df.mean(axis=1)
row_std = df.std(axis=1).replace(0, 1e-6)

for i in range(3): 
    df[f'NEW_COL_{i}'] = row_sum * row_mean / row_std


df['cumsum_total'] = row_sum.cumsum()
df['cumprod_total'] = row_sum.cumprod()
df['expanding_mean'] = row_sum.expanding().mean()
df['rolling_sum'] = row_sum.rolling(window=50, min_periods=1).sum()


df['group'] = np.random.choice(['A', 'B', 'C', 'D'], size=len(df))
grouped = df.groupby('group').agg(['mean', 'std', 'min', 'max', 'median'])
pivoted = df.pivot_table(index='group', values='NEW_COL_0', aggfunc='mean')
stacked = df.set_index('group').stack().reset_index()


df2 = df[['NEW_COL_0', 'group']].copy()
df2['dummy'] = np.random.randint(0, 100, size=len(df2))
merged = pd.merge(df, df2, on='group', how='inner')


for i in range(3):
    merged[f'applied_{i}'] = np.where(merged['dummy'] % 2 == 0, merged['dummy'] * (i + 1), merged['dummy'] + i)


def complex_function(x):
    try:
        return np.log1p(np.sqrt(np.abs(np.sin(x) + np.cos(x**2) - np.tan(x / 3.14)))) * np.e
    except:
        return np.nan
merged['complex'] = merged['NEW_COL_1'].apply(complex_function)


output_path = "/mnt/data/final_useless_output.csv"
merged.to_csv(output_path, index=False)

output_path


#Şunu refactor et dalağını sikerim senin dalagını sikerim
